---
- name: Create Kafka Cluster for user{{ item }}
  k8s:
    state: present
    namespace: 'user{{ item }}'
    resource_definition: "{{ lookup('template', 'kafka-earth.yaml.j2') }}"

- name: Enable anyuid on Namespace user{{ item }}
  shell: "oc adm policy add-scc-to-user anyuid -z default -n user{{ item }}"

- name: Check if DB has been deployed to user{{ item }}
  k8s_facts:
    kind: DeploymentConfig
    name: mssql-server-linux
    namespace: 'user{{ item }}'
    api_version: v1
  register: db_exists

- name: Deploy DB user{{ item }}
  block:
  - name: Deploy Earth Database
    shell: "oc new-app {{ mssqlserver_image }}:{{ mssqlserver_version }} \
            -l 'app.openshift.io/runtime=mssql,app.kubernetes.io/part-of=enterprise-app' \
            -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Password!' \
            -e 'MSSQL_PID=Standard' -e 'MSSQL_AGENT_ENABLED=true' \
            --name mssql-server-linux -n user{{ item }}"
  - name: Create Earth Data SQL ConfigMap
    k8s:
      state: present
      namespace: 'user{{ item }}'
      resource_definition: "{{ lookup('template', 'configmap-data-sql.yaml.j2') }}"
  - name: Mount ConfigMap Volume
    shell: "oc set volume dc/mssql-server-linux --add --name=earth-data \
            --type=configmap --mount-path=/opt/workshop \
            --configmap-name=earth-data-sql -n user{{ item }}"
  - name: Add Post Hook
    shell: "oc set deployment-hook dc/mssql-server-linux -n user{{ item }} --post \
            -c mssql-server-linux --failure-policy=retry --volumes earth-data \
            -- /opt/mssql-tools/bin/sqlcmd -S mssql-server-linux.user{{ item }}.svc \
            -U sa -P Password! -i /opt/workshop/earth-data.sql"
  when: (db_exists.resources is undefined) or (db_exists.resources | length == 0)

- name: Check if App has been deployed in user{{ item }}
  k8s_facts:
    kind: DeploymentConfig
    name: my-apache-php-app
    namespace: 'user{{ item }}'
    api_version: v1
  register: app_exists

- name: Deploy Application for user{{ item }}
  block:
  - name: Deploy Earth Application
    shell: "oc new-app quay.io/hguerreroo/my-apache-php-app:latest \
            -l 'app.openshift.io/runtime=php,app.kubernetes.io/part-of=enterprise-app' \
            -e 'SERVER_NAME=mssql-server-linux.user{{ item }}.svc' \
            -e 'USER=user{{ item }}' -n user{{ item }}"
  - name: Create Earth Application Route
    shell: "oc expose service my-apache-php-app --name=www -n user{{ item }}"
  when: (app_exists.resources is undefined) or (app_exists.resources | length == 0)
